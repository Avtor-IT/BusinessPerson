name: deploy

on:
    push:
        branches:
            - main
    workflow_dispatch:

jobs:
    build_backend:
        runs-on: ubuntu-latest
        steps:
            - name: checkout docker repo
              uses: actions/checkout@v4
            - name: clone backend submodule
              uses: actions/checkout@v4
              with:
                  repository: Avtor-IT/BP-Backend
                  token: ${{ secrets.PAT }}
                  path: backend
            - name: login to docker hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_PASSWORD }}
            - name: set up docker buildx
              uses: docker/setup-buildx-action@v3
            - name: Build and push
              uses: docker/build-push-action@v6
              with:
                  context: .
                  push: true
                  file: docker/backend/Dockerfile
                  tags: ${{ secrets.DOCKERHUB_USERNAME }}/businessperson-backend:latest

    build_frontend:
        runs-on: ubuntu-latest
        steps:
            - name: checkout docker repo
              uses: actions/checkout@v4
            - name: clone frontend submodule
              uses: actions/checkout@v4
              with:
                  repository: Avtor-IT/BP-Frontend
                  path: frontend
            - name: login to docker hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_PASSWORD }}
            - name: set up docker buildx
              uses: docker/setup-buildx-action@v3
            - name: Build and push
              uses: docker/build-push-action@v6
              with:
                  context: .
                  push: true
                  file: docker/frontend/Dockerfile
                  tags: ${{ secrets.DOCKERHUB_USERNAME }}/businessperson-frontend:latest

    build_nginx:
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v4
            - name: login to docker hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_PASSWORD }}
            - name: set up docker buildx
              uses: docker/setup-buildx-action@v3
            - name: Build and push
              uses: docker/build-push-action@v6
              with:
                  context: .
                  push: true
                  file: docker/nginx/Dockerfile
                  tags: ${{ secrets.DOCKERHUB_USERNAME }}/businessperson-nginx:latest

    deploy:
        runs-on: ubuntu-latest
        needs:
            - build_backend
            - build_frontend
            - build_nginx
        steps:
            - name: checkout
              uses: actions/checkout@v4
            - name: login to docker hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_PASSWORD }}
            - name: Add SSH host to known_hosts
              run: |
                  mkdir -p ~/.ssh
                  echo "5.35.82.235 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAID5OrcZ+yAmB9QggWuvVngv6NUg1+MSlLoKzro5Q4arC" >> ~/.ssh/known_hosts
                  echo "5.35.82.235 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCnMI1WNgCTTFvU8+Lq6F4HMOD6AapbpUDSBnHdDUg35mYaFMUq5hPZEworFINOB+diFzdhc9aQe90EbsTGBhZQGPfDUlzmXVJzN/lMZAOpL8U//in1znMDIxgXq6dfactXl5yZXGv0gV3nEXTJ2nrNskS+9HsBPVZCq0OnB54AZUFyK6HWWBm9kYwbPExxAhVzDCq7SgHFcR0w0zeXzV3et3BCeVjZZFZQ3rfR791NUkjQjtTYaa7qGzPTjXRSVy6DU0Pp7d8X6QfOIX5jfKKCGD5UKSGPm01icAGn7GC6pve5c67csk9HfxCX9xJLlgYhzmTAtRlHrNvvS6pAbYyuyGPZldbYDfQ8JQzGHVWQoSflWjhmBRxm18jhqeK2IU54YmSqNxNUsHa4NRkjeX0EDJFrBztpjCP3wji1JfGE5hGTEEsfL3NAs+VT/wLanb6/pC2/Kc7NWMwMfQj41N9P1VbvjwgRte36tR6dXhtjpNQzKw35Mpr7+jUYlbNOIBM=" >> ~/.ssh/known_hosts
                  echo "5.35.82.235 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBIraJartBjXZJDKn3GcId62aQjfmxcxbMe8A9hTPfNAF7PhB/gqzxIdagVai1Ycg3+K7GoVzxjBpr0eOmKi5JjU=" >> ~/.ssh/known_hosts
            - name: deploy to swarm
              uses: sagebind/docker-swarm-deploy-action@v2
              with:
                  remote_host: ssh://${{ secrets.SSH_USER }}@
                  ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
                  ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
                  args: stack deploy -c compose.swarm.yaml businessperson --with-registry-auth
