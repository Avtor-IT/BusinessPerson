name: deploy

on:
    push:
        branches:
            - main
    workflow_dispatch:

jobs:
    build_backend:
        runs-on: ubuntu-latest
        steps:
            - name: checkout docker repo
              uses: actions/checkout@v4
            - name: clone backend submodule
              uses: actions/checkout@v4
              with:
                  repository: Avtor-IT/BP-Backend
                  token: ${{ secrets.PAT }}
                  path: backend
            - name: login to docker hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_PASSWORD }}
            - name: set up docker buildx
              uses: docker/setup-buildx-action@v3
            - name: Build and push
              uses: docker/build-push-action@v6
              with:
                  context: .
                  push: true
                  file: docker/backend/Dockerfile
                  tags: ${{ secrets.DOCKERHUB_USERNAME }}/businessperson-backend:latest

    build_nginx:
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v4
            - name: clone frontend submodule
              uses: actions/checkout@v4
              with:
                  repository: Avtor-IT/BP-Frontend
                  path: frontend
            - name: login to docker hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_PASSWORD }}
            - name: set up docker buildx
              uses: docker/setup-buildx-action@v3
            - name: Build and push
              uses: docker/build-push-action@v6
              with:
                  context: .
                  push: true
                  file: docker/nginx/Dockerfile
                  tags: ${{ secrets.DOCKERHUB_USERNAME }}/businessperson-nginx:latest

    deploy:
        runs-on: ubuntu-latest
        needs:
            - build_backend
            - build_nginx
        steps:
            - name: checkout
              uses: actions/checkout@v4
            - name: Copy docker-compose.yaml to server
              uses: appleboy/scp-action@v0.1.7
              with:
                host: ${{ secrets.SSH_HOST }}
                username: ${{ secrets.SSH_USER }}
                key: ${{ secrets.SSH_PRIVATE_KEY }}
                source: "docker-compose.yaml"
                target: "~/businessperson"

            - name: Deploy to server via SSH
              uses: appleboy/ssh-action@v1.2.0
              with:
                  host: ${{ secrets.SSH_HOST }}
                  username: ${{ secrets.SSH_USER }}
                  key: ${{ secrets.SSH_PRIVATE_KEY }}
                  script: |
                      set -e
                      cd ~/businessperson
                      
                      docker compose pull
                      docker compose up -d --remove-orphans
                      docker system prune -f

            # - name: Stack Deploy
            #   uses: cssnr/stack-deploy-action@v1
            #   with:
            #       name: businessperson
            #       file: compose.swarm.yaml
            #       host: ${{ secrets.SSH_HOST }}
            #       user: ${{ secrets.SSH_USER }}
            #       ssh_key: ${{ secrets.SSH_PRIVATE_KEY }}
            #       registry_auth: true
            #       prune: true
            #       registry_user: ${{ secrets.DOCKERHUB_USERNAME }}
            #       registry_pass: ${{ secrets.DOCKERHUB_PASSWORD }}
            # - name: system prune
            #   uses: appleboy/ssh-action@v1
            #   with:
            #       host: ${{ secrets.SSH_HOST }}
            #       username: root
            #       key: ${{ secrets.SSH_PRIVATE_KEY }}
            #       script: sudo docker system prune -f
